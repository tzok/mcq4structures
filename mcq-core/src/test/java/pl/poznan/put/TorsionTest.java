package pl.poznan.put;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import java.util.List;
import org.junit.Assert;
import org.junit.Test;
import pl.poznan.put.circular.Angle;
import pl.poznan.put.matching.SelectionFactory;
import pl.poznan.put.matching.StructureSelection;
import pl.poznan.put.pdb.analysis.PdbCompactFragment;
import pl.poznan.put.pdb.analysis.PdbModel;
import pl.poznan.put.pdb.analysis.PdbParser;
import pl.poznan.put.pdb.analysis.PdbResidue;
import pl.poznan.put.rna.NucleotideTorsionAngle;
import pl.poznan.put.torsion.MasterTorsionAngleType;
import pl.poznan.put.utility.ResourcesHelper;

public class TorsionTest {
  // @formatter:off
  private static final MasterTorsionAngleType[] ANGLE_TYPES_FRABASE_ORDER = {
    NucleotideTorsionAngle.ALPHA,
    NucleotideTorsionAngle.BETA,
    NucleotideTorsionAngle.GAMMA,
    NucleotideTorsionAngle.DELTA,
    NucleotideTorsionAngle.EPSILON,
    NucleotideTorsionAngle.ZETA,
    NucleotideTorsionAngle.CHI,
    NucleotideTorsionAngle.PSEUDOPHASE_PUCKER,
    NucleotideTorsionAngle.NU0,
    NucleotideTorsionAngle.NU1,
    NucleotideTorsionAngle.NU2,
    NucleotideTorsionAngle.NU3,
    NucleotideTorsionAngle.NU4,
    NucleotideTorsionAngle.ETA,
    NucleotideTorsionAngle.THETA
  };

  private static final double[][] TABLE_1EHZ = {
    {
      Double.NaN,
      -128.1,
      67.8,
      82.9,
      -155.6,
      -68.6,
      -167.8,
      16.1,
      1.7,
      -23.4,
      35.1,
      -35.2,
      21.1,
      Double.NaN,
      -139.3
    },
    {
      -67.4, -178.4, 53.8, 83.4, -145.1, -76.8, -163.8, 16.1, 1.6, -23.2, 34.8, -34.8, 20.9, 171.9,
      -144.6
    },
    {
      -74.5, 169.7, 59.5, 80.7, -148.3, -80.0, -161.9, 14.6, 2.7, -25.1, 36.8, -36.1, 21.2, 160.2,
      -151.4
    },
    {
      -64.4, 162.2, 60.7, 82.2, -157.4, -68.7, -168.7, 20.8, -1.6, -22.3, 36.3, -38.2, 25.0, 164.3,
      -144.6
    },
    {
      -74.7, -176.5, 53.4, 84.9, -137.5, -81.7, -162.9, 4.8, 10.1, -32.6, 41.5, -36.6, 16.7, 166.9,
      -138.1
    },
    {
      -48.8, 157.6, 55.3, 81.3, -151.0, -77.0, -160.0, 18.2, 0.3, -24.0, 37.3, -38.1, 23.9, 172.1,
      -149.7
    },
    {
      -59.5, -178.7, 62.5, 137.3, -105.9, -52.0, -133.1, 156.1, -24.4, 35.4, -32.4, 18.9, 3.3,
      -158.0, -42.7
    },
    {
      -83.8, -145.6, 55.4, 78.6, -142.8, -118.6, -161.5, 10.5, 5.8, -28.7, 39.7, -37.2, 19.7, 162.7,
      160.7
    },
    {
      -69.7, -141.7, 52.3, 147.8, -106.2, -77.3, -70.5, 149.8, -31.7, 41.8, -35.6, 18.1, 8.4,
      -140.6, -38.9
    },
    {
      177.8, 147.2, 60.1, 89.3, -126.2, -88.7, 169.6, 6.6, 7.8, -28.0, 36.7, -33.0, 15.9, 27.8,
      -130.3
    },
    {
      -56.1, 167.9, 48.2, 87.2, -150.5, -69.9, -160.9, 16.8, 1.2, -21.2, 32.1, -32.5, 19.8, 170.3,
      -135.8
    },
    {
      -67.8, 172.9, 51.8, 80.7, -158.5, -65.2, -158.3, 25.2, -4.6, -19.3, 34.5, -37.9, 26.7, 159.9,
      -121.6
    },
    {
      166.6, -169.9, 178.6, 82.5, -153.1, -97.4, -168.3, 23.7, -3.4, -19.4, 33.8, -36.4, 25.1,
      178.1, -179.1
    },
    {
      83.4, -158.3, -114.6, 92.0, -125.5, -57.3, -170.7, -1.1, 12.6, -30.8, 36.8, -30.2, 11.0,
      171.9, -146.5
    },
    {
      -55.1, 162.5, 51.9, 79.8, -136.3, -143.9, -164.5, 16.0, 1.9, -24.6, 36.8, -36.8, 22.2, 164.3,
      -177.9
    },
    {
      -6.1, 91.2, 76.8, 96.8, -61.8, -131.2, -85.8, 18.8, 0.0, -18.7, 29.2, -30.2, 19.2, -124.1,
      -77.5
    },
    {
      27.8, 107.7, 174.1, 94.8, 178.0, 76.2, -142.5, -18.6, 23.0, -36.7, 35.1, -23.2, 0.2, -10.5,
      -64.3
    },
    {
      45.4, -159.4, 59.0, 150.6, -95.2, -179.1, -99.5, 154.3, -27.9, 39.5, -35.0, 20.2, 4.8, -21.0,
      -167.4
    },
    {
      -71.4, -178.9, 53.8, 153.8, -91.6, -83.7, -80.3, 167.6, -17.6, 31.0, -31.9, 23.1, -3.8,
      -127.4, -43.3
    },
    {
      -81.3, -150.7, 47.8, 89.9, -122.3, -54.1, 177.8, 8.7, 6.6, -27.8, 36.6, -34.2, 17.5, 165.3,
      -100.4
    },
    {
      -75.6, 148.6, -176.6, 78.2, -168.9, -75.6, -160.2, 13.0, 3.8, -25.0, 35.1, -34.4, 19.4, -78.3,
      152.7
    },
    {
      158.8, 153.5, 179.3, 82.0, -145.0, -80.4, -175.5, -6.2, 16.4, -34.1, 38.1, -29.5, 8.3, 159.5,
      167.6
    },
    {
      -53.3, 174.8, 52.5, 82.3, -155.3, -66.4, -158.0, 12.6, 4.2, -26.6, 37.4, -36.5, 20.1, 178.4,
      -141.8
    },
    {
      -68.8, 178.2, 46.8, 83.6, -144.3, -72.8, -160.7, 13.4, 3.9, -28.4, 40.3, -39.3, 22.4, 163.7,
      -139.5
    },
    {
      -65.1, 168.9, 53.9, 83.3, -145.1, -68.4, -160.3, 17.4, 0.6, -24.5, 37.8, -38.0, 23.6, 161.4,
      -132.6
    },
    {
      -53.8, 170.8, 47.7, 86.0, -136.3, -76.9, -163.4, 9.3, 6.3, -27.5, 37.1, -34.7, 17.9, 173.0,
      -133.0
    },
    {
      -53.0, 166.9, 43.6, 83.4, -148.5, -73.4, -168.2, 18.3, 0.2, -23.5, 36.5, -37.2, 23.6, 163.5,
      -142.3
    },
    {
      -72.4, 178.3, 49.3, 80.1, -152.1, -67.0, -160.6, 9.2, 6.6, -29.0, 39.1, -36.3, 18.8, 157.5,
      -143.8
    },
    {
      -66.6, 174.0, 55.6, 81.4, -155.5, -78.3, -165.9, 13.7, 3.4, -26.6, 38.4, -37.4, 21.4, 163.5,
      -152.9
    },
    {
      -54.0, 165.9, 56.9, 83.6, -144.7, -62.3, -171.7, 14.5, 2.6, -24.2, 35.7, -34.9, 20.4, 178.3,
      -127.8
    },
    {
      -69.9, 177.8, 52.3, 83.7, -137.0, -75.5, -156.7, 14.6, 2.6, -24.0, 35.0, -34.6, 20.2, 165.4,
      -133.9
    },
    {
      -52.7, 161.4, 49.3, 80.1, -145.9, -71.2, -149.9, 20.4, -1.2, -21.7, 35.1, -36.7, 23.9, 164.5,
      -139.2
    },
    {
      -67.7, -177.0, 47.0, 82.1, -148.0, -53.7, -148.2, 13.3, 3.5, -25.4, 36.5, -35.3, 20.1, 165.1,
      -114.0
    },
    {
      171.1, 148.1, 52.5, 83.4, -132.5, -71.8, -171.2, 12.2, 3.9, -22.7, 32.2, -30.8, 17.1, 27.3,
      -121.7
    },
    {
      -47.7, 163.7, 40.2, 80.9, -143.7, -59.5, -154.4, 21.9, -2.0, -19.9, 32.7, -34.9, 23.4, 162.5,
      -127.7
    },
    {
      -52.4, 165.7, 51.3, 72.2, -160.4, -85.2, -158.4, 45.8, -20.6, -7.3, 30.6, -43.2, 40.5, 164.9,
      -172.7
    },
    {
      -57.5, 163.0, 47.8, 81.1, -148.1, -67.0, -168.8, 15.4, 2.1, -24.1, 36.0, -35.6, 21.0, 163.1,
      -135.2
    },
    {
      -61.8, -180.0, 46.9, 82.5, -136.8, -76.4, -169.4, 2.4, 10.9, -30.3, 37.6, -32.5, 13.6, 170.2,
      -133.9
    },
    {
      -47.7, 160.4, 53.3, 79.3, -140.1, -68.6, -166.9, 15.8, 2.1, -25.6, 38.5, -38.4, 22.8, 174.0,
      -132.6
    },
    {
      -67.4, 172.0, 56.2, 83.2, -154.2, -74.9, -162.6, 17.3, 0.8, -22.5, 34.6, -35.0, 21.5, 163.1,
      -148.5
    },
    {
      -68.2, -179.4, 52.4, 78.9, -137.3, -84.7, -169.0, 13.4, 3.8, -27.7, 39.9, -38.6, 22.0, 169.4,
      -148.8
    },
    {
      -47.9, 158.7, 55.6, 79.8, -160.3, -70.3, -169.0, 20.9, -1.7, -22.4, 36.8, -38.6, 25.4, 171.2,
      -150.4
    },
    {
      -67.0, -178.3, 55.6, 81.6, -154.9, -76.4, -160.2, 12.6, 4.3, -27.6, 39.1, -37.6, 21.1, 174.2,
      -151.6
    },
    {
      -59.7, 162.1, 60.0, 85.3, -142.8, -57.2, -159.4, 16.9, 1.0, -23.0, 35.2, -35.4, 21.6, 173.2,
      -120.4
    },
    {
      -71.9, -176.9, 51.0, 87.6, -135.1, -78.7, -149.3, 15.4, 2.1, -24.3, 35.7, -35.4, 21.2, 168.6,
      -141.6
    },
    {
      -56.8, -146.5, 48.4, 141.6, -102.7, -137.9, -65.8, 154.5, -27.4, 38.6, -34.7, 19.7, 4.7,
      -143.2, -107.3
    },
    {
      62.4, -164.0, 44.4, 146.1, -93.7, -78.0, -112.0, 164.9, -20.9, 34.8, -35.1, 24.3, -2.2, -31.5,
      -56.8
    },
    {
      -73.5, -174.3, 161.5, 145.6, -143.5, 75.6, -140.1, 158.2, -25.6, 38.4, -35.6, 22.1, 2.1,
      -82.5, 53.9
    },
    {
      50.7, 168.5, 42.2, 84.3, -145.0, -82.1, -173.6, 10.1, 5.8, -28.1, 38.7, -36.0, 19.1, -56.7,
      -145.3
    },
    {
      -51.7, 177.2, 42.1, 80.4, -150.6, -67.8, -165.3, 5.6, 9.4, -32.2, 41.0, -36.4, 17.6, 174.8,
      -146.6
    },
    {
      -63.9, 176.8, 52.8, 79.4, -150.4, -71.3, -156.6, 11.5, 4.9, -27.9, 38.9, -36.8, 20.3, 170.3,
      -147.3
    },
    {
      -64.7, 173.6, 48.5, 80.3, -156.5, -69.4, -164.0, 14.1, 3.2, -28.5, 41.4, -40.1, 23.6, 160.3,
      -145.8
    },
    {
      -56.9, 171.5, 56.2, 83.9, -159.4, -64.9, -169.2, 19.8, -1.0, -23.1, 37.0, -38.3, 24.9, 174.9,
      -141.5
    },
    {
      -79.7, -172.8, 57.7, 77.6, -128.6, -70.7, -161.5, 20.6, -1.4, -22.2, 35.9, -37.7, 24.8, 171.1,
      -129.2
    },
    {
      -49.7, 168.8, 44.1, 76.6, -140.8, -69.9, -152.4, 10.1, 6.2, -29.9, 40.9, -38.3, 20.4, 165.3,
      -115.2
    },
    {
      166.4, 171.8, 53.3, 83.4, -132.7, -70.6, -161.5, 12.6, 3.8, -25.3, 35.7, -34.5, 19.2, 31.4,
      -126.9
    },
    {
      -65.7, 167.1, 57.5, 81.7, -145.2, -67.6, -159.3, 12.8, 4.0, -26.7, 37.9, -36.5, 20.6, 164.3,
      -142.5
    },
    {
      -60.8, -146.1, 71.8, 156.7, -78.3, -169.3, -86.3, 161.1, -24.3, 38.4, -36.9, 23.9, 0.2,
      -131.5, -108.7
    },
    {
      72.6, -158.8, 63.7, 84.6, -148.8, -53.7, -165.6, 25.8, -4.4, -18.3, 31.8, -35.7, 25.4, 1.8,
      -119.4
    },
    {
      -72.2, 179.5, 66.0, 148.3, -97.1, -66.4, -117.8, 154.8, -28.8, 40.5, -36.4, 21.2, 4.7, -171.8,
      -40.7
    },
    {
      -84.3, 179.8, 38.2, 83.0, -152.3, -74.5, -166.7, 14.8, 2.6, -25.5, 36.8, -36.6, 21.5, 122.4,
      -148.3
    },
    {
      -60.1, 179.6, 46.9, 80.5, -145.6, -74.1, -158.7, 9.9, 5.9, -27.8, 38.1, -35.4, 18.8, 173.0,
      -146.6
    },
    {
      -62.0, 167.3, 50.9, 80.7, -152.3, -70.7, -152.6, 10.7, 5.4, -27.3, 37.5, -35.5, 19.1, 164.5,
      -148.3
    },
    {
      -66.9, 180.0, 44.1, 75.8, -147.5, -76.5, -161.8, 12.9, 4.1, -28.6, 40.2, -38.8, 22.2, 158.4,
      -151.0
    },
    {
      -44.0, 164.2, 49.9, 79.8, -152.0, -73.3, -172.8, 16.5, 1.5, -26.6, 39.5, -39.9, 24.3, 173.6,
      -147.3
    },
    {
      -57.9, 178.5, 52.0, 81.7, -151.0, -73.5, -164.9, 22.5, -2.9, -21.6, 36.5, -38.8, 26.5, 177.6,
      -145.4
    },
    {
      -62.0, 164.1, 54.2, 83.2, -152.2, -78.3, -162.8, 15.0, 2.4, -24.9, 36.5, -36.1, 21.4, 165.6,
      -149.3
    },
    {
      -59.8, 175.3, 47.3, 82.2, -152.9, -65.4, -160.1, 11.2, 5.3, -28.4, 39.5, -37.5, 20.3, 168.9,
      -138.2
    },
    {
      -63.8, 168.1, 55.1, 79.1, -155.4, -85.6, -161.4, 14.7, 2.9, -26.3, 38.3, -37.9, 22.3, 165.6,
      -160.5
    },
    {
      -61.7, 164.6, 53.1, 79.0, -158.5, -64.5, -152.0, 15.0, 2.4, -25.9, 38.7, -37.9, 22.4, 166.7,
      -146.2
    },
    {
      -78.4, 173.6, 60.3, 80.3, -149.6, -68.4, -162.8, 13.5, 3.7, -27.4, 39.2, -38.3, 21.8, 161.0,
      -143.0
    },
    {
      -73.2, 176.2, 62.1, 83.0, -152.3, -67.9, -161.6, 19.5, -0.6, -21.9, 34.9, -36.2, 23.1, 166.1,
      -141.5
    },
    {
      -63.3, 177.7, 50.4, 81.6, -148.2, -66.1, -167.4, 15.0, 2.4, -25.4, 37.3, -36.9, 21.8, 167.6,
      -137.8
    },
    {
      -66.9, -174.9, 50.7, 85.9, -145.0, -58.8, -153.1, 11.8, 4.4, -25.4, 35.6, -34.0, 18.6, 171.2,
      -122.1
    },
    {
      -52.3, 175.7, 42.3, 85.6, -131.9, 163.9, -151.7, 15.1, 2.3, -22.5, 33.1, -33.0, 19.2, 174.9,
      106.5
    },
    {
      -71.0,
      130.2,
      164.6,
      160.9,
      Double.NaN,
      Double.NaN,
      138.5,
      176.1,
      -13.6,
      30.5,
      -34.8,
      27.7,
      -9.1,
      Double.NaN,
      Double.NaN
    },
  };
  // @formatter:on

  private final PdbParser parser = new PdbParser();

  @Test
  public final void test1EHZ() throws Exception {
    final String pdb1EHZ = ResourcesHelper.loadResource("1EHZ.pdb");
    final List<PdbModel> models = parser.parse(pdb1EHZ);
    assertThat(models.size(), is(1));
    final PdbModel model = models.get(0);
    final StructureSelection selection = SelectionFactory.create("1EHZ", model);
    final List<PdbCompactFragment> compactFragments = selection.getCompactFragments();
    assertThat(compactFragments.size(), is(1));
    final PdbCompactFragment compactFragment = compactFragments.get(0);
    final List<PdbResidue> residues = compactFragment.residues();
    assertThat(residues.size(), is(TorsionTest.TABLE_1EHZ.length));

    for (int i = 0; i < TorsionTest.TABLE_1EHZ.length; i++) {
      final PdbResidue residue = residues.get(i);

      for (int j = 0; j < TorsionTest.ANGLE_TYPES_FRABASE_ORDER.length; j++) {
        final MasterTorsionAngleType masterType = TorsionTest.ANGLE_TYPES_FRABASE_ORDER[j];
        final Angle angle = compactFragment.torsionAngles(residue.identifier()).value(masterType);
        final double expected = TorsionTest.TABLE_1EHZ[i][j];
        final double actual = angle.degrees();
        Assert.assertEquals(
            String.format("Error for row %d angle %s", i, TorsionTest.ANGLE_TYPES_FRABASE_ORDER[j]),
            expected,
            actual,
            0.1);
      }
    }
  }
}
